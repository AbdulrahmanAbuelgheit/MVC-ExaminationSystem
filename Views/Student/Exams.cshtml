@{
    ViewData["Title"] = "Student Exams";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}

<style>
    /* Matching the style variables from Layout */
    :root {
        --primary-color: #4e91fc;
        --primary-light: #a8c9ff;
        --secondary-color: #7f5af0;
        --dark-color: #1a1a2e;
        --light-color: #f8f9fa;
        --success-color: #4cc9f0;
        --error-color: #f72585;
        --border-radius: 8px;
        --box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    .exam-header {
        background-color: white;
        border-radius: var(--border-radius);
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: var(--box-shadow);
    }

    .card {
        margin-bottom: 15px;
        border: none;
        border-radius: var(--border-radius);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        transition: var(--transition);
    }

        .card:hover {
            transform: translateY(-3px);
        }

    .card-header {
        background-color: white;
        border-bottom: 1px solid #eee;
        border-top-left-radius: var(--border-radius) !important;
        border-top-right-radius: var(--border-radius) !important;
    }

    .status-badge {
        font-size: 0.85rem;
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
    }

    .badge.bg-warning {
        background-color: #FFC107 !important;
        color: #212529;
    }

    .badge.bg-success {
        background-color: var(--success-color) !important;
    }

    .score-circle {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-color: rgba(78, 145, 252, 0.08);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-right: 15px;
        border: 2px solid var(--primary-light);
        color: var(--primary-color);
    }

    .score-value {
        font-size: 1.2rem;
        font-weight: bold;
    }

    .score-label {
        font-size: 0.7rem;
        text-transform: uppercase;
    }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
    }

    .empty-icon {
        font-size: 4rem;
        color: var(--primary-light);
        margin-bottom: 20px;
    }

    .section-title {
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #dee2e6;
        color: var(--dark-color);
    }

    .countdown {
        font-size: 0.9rem;
        color: var(--error-color);
        font-weight: 500;
    }

    .tab-content {
        padding-top: 20px;
    }

    /* Card Styles for Summary Cards */
    .stat-card {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        background-color: white;
        transition: var(--transition);
    }

        .stat-card:hover {
            box-shadow: var(--box-shadow);
        }

    .stat-icon {
        font-size: 2rem;
        margin-bottom: 0.75rem;
    }

        .stat-icon.text-primary {
            color: var(--primary-color) !important;
        }

        .stat-icon.text-success {
            color: var(--success-color) !important;
        }

    /* Nav Tabs Styling */
    .nav-tabs {
        border-bottom: 1px solid #dee2e6;
    }

        .nav-tabs .nav-link {
            margin-bottom: -1px;
            border: 1px solid transparent;
            border-top-left-radius: 0.25rem;
            border-top-right-radius: 0.25rem;
            color: var(--dark-color);
            transition: var(--transition);
        }

            .nav-tabs .nav-link:hover {
                border-color: #e9ecef #e9ecef #dee2e6;
                color: var(--primary-color);
            }

            .nav-tabs .nav-link.active {
                color: var(--primary-color);
                background-color: #fff;
                border-color: #dee2e6 #dee2e6 #fff;
                font-weight: 500;
            }

    /* Alert Styling */
    .alert-info {
        background-color: rgba(78, 145, 252, 0.08);
        border-color: var(--primary-light);
        color: var(--dark-color);
    }

    /* Text styles */
    .text-success {
        color: var(--success-color) !important;
    }

    .text-danger {
        color: var(--error-color) !important;
    }

    .text-muted {
        color: #6c757d !important;
    }
</style>

<div class="container-fluid py-4">
    <div class="exam-header">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h2 class="mb-1"><i class="bi bi-file-text me-2"></i>@ViewBag.studentName's Exams</h2>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card stat-card">
                <div class="stat-icon text-primary">
                    <i class="bi bi-calendar-event"></i>
                </div>
                <h3>@ViewBag.UpcomingExamsCount</h3>
                <p class="text-muted">Upcoming Exams</p>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card stat-card">
                <div class="stat-icon text-success">
                    <i class="bi bi-check-circle"></i>
                </div>
                <h3>@ViewBag.CompletedExamsCount</h3>
                <p class="text-muted">Completed Exams</p>
            </div>
        </div>
    </div>

    <ul class="nav nav-tabs" id="examTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="upcoming-tab" data-bs-toggle="tab" data-bs-target="#upcoming" type="button" role="tab" aria-controls="upcoming" aria-selected="true">Upcoming Exams</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="completed-tab" data-bs-toggle="tab" data-bs-target="#completed" type="button" role="tab" aria-controls="completed" aria-selected="false">Completed Exams</button>
        </li>
    </ul>

    <div class="tab-content" id="examTabContent">
        <div class="tab-pane fade show active" id="upcoming" role="tabpanel" aria-labelledby="upcoming-tab">
            @if (ViewBag.UpcomingExams != null && ViewBag.UpcomingExams.Count > 0)
            {
                <div class="row">
                    @foreach (var exam in ViewBag.UpcomingExams)
                    {
                        bool isActive = exam.ExamDatetime <= DateTime.Now && exam.Expire_Date > DateTime.Now;

                        <div class="col-md-6 mb-4">
                            <div class="card h-100">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">@exam.Crs.CrsName Exam</h5>
                                    @if (isActive)
                                    {
                                        <span class="badge bg-primary status-badge">Available Now</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning status-badge">Upcoming</span>
                                    }
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <strong><i class="bi bi-calendar me-2"></i>Date:</strong>
                                        @exam.ExamDatetime.ToString("dddd, MMMM d, yyyy")
                                    </div>
                                    <div class="mb-3">
                                        <strong><i class="bi bi-clock me-2"></i>Time:</strong>
                                        @exam.ExamDatetime.ToString("h:mm tt")
                                    </div>
                                    <div class="mb-3">
                                        <strong><i class="bi bi-hourglass-split me-2"></i>Duration:</strong>
                                        @exam.ExamDuration minutes
                                    </div>
                                    <div class="mb-3">
                                        <strong><i class="bi bi-calendar-x me-2"></i>Expires:</strong>
                                        @exam.Expire_Date.ToString("dddd, MMMM d, yyyy")
                                    </div>

                                    @if (isActive)
                                    {
                                        <div class="alert alert-success mt-3 mb-3">
                                            <i class="bi bi-info-circle me-2"></i>
                                            Exam is available now! Expires in:
                                            <span class="countdown">
                                                @{
                                                    var timeUntilExpiry = exam.Expire_Date - DateTime.Now;
                                                }
                                                @(timeUntilExpiry.Days) days,
                                                @(timeUntilExpiry.Hours) hours,
                                                @(timeUntilExpiry.Minutes) minutes
                                            </span>
                                        </div>

                                        <div class="text-center">
                                            <a href="@Url.Action("TakeExam", "Student", new { id = exam.ExamID })"
                                               class="btn btn-primary">
                                                <i class="bi bi-pen me-2"></i>Take Exam Now
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info mt-3 mb-0">
                                            <i class="bi bi-info-circle me-2"></i>
                                            Time until exam:
                                            <span class="countdown">
                                                @{
                                                    var timeUntilExam = exam.ExamDatetime - DateTime.Now;
                                                }
                                                @(timeUntilExam.Days) days,
                                                @(timeUntilExam.Hours) hours,
                                                @(timeUntilExam.Minutes) minutes
                                            </span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="bi bi-calendar-event"></i>
                    </div>
                    <h3>No Upcoming Exams</h3>
                    <p class="text-muted">You don't have any scheduled exams at the moment.</p>
                </div>
            }
        </div>

    <div class="tab-pane fade" id="completed" role="tabpanel" aria-labelledby="completed-tab">
        @if (ViewBag.CompletedExams != null && ViewBag.CompletedExams.Count > 0)
        {
            <div class="row">
                @foreach (var studentExam in ViewBag.CompletedExams)
                {
                    var exam = studentExam.Exam;
                    var score = studentExam.Score ?? 0;

                    var totalPoints = 0;
                    if (exam.QIDs != null)
                    {
                        foreach (var question in exam.QIDs)
                        {
                            totalPoints += question.Points;
                        }
                    }

                    var passThreshold = totalPoints > 0 ? totalPoints / 2 : 50;
                    string resultClass = score >= passThreshold ? "text-success" : "text-danger";
                    string resultText = score >= passThreshold ? "Passed" : "Failed";

                    <div class="col-md-6 mb-4">
                        <div class="card h-100">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">@exam.Crs.CrsName Exam</h5>
                                <span class="badge bg-success status-badge">Completed</span>
                            </div>
                            <div class="card-body">
                                <div class="d-flex align-items-center mb-3">
                                    <div class="score-circle">
                                        <span class="score-value">@score</span>
                                        <span class="score-label">Points</span>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">@exam.Crs.CrsName</h6>
                                        <small class="text-muted">Exam ID: @exam.ExamID</small>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <strong><i class="bi bi-calendar me-2"></i>Date Taken:</strong>
                                    @exam.ExamDatetime.ToString("MMMM d, yyyy")
                                </div>
                                <div class="mb-3">
                                    <strong><i class="bi bi-clock me-2"></i>Time:</strong>
                                    @exam.ExamDatetime.ToString("h:mm tt")
                                </div>
                                <div class="mb-3">
                                    <strong><i class="bi bi-hourglass-split me-2"></i>Duration:</strong>
                                    @exam.ExamDuration minutes
                                </div>
                                <div class="mb-3">
                                    <strong><i class="bi bi-check2-all me-2"></i>Total Points:</strong>
                                    @score out of @totalPoints
                                </div>
                                <div class="mt-3 text-end">
                                    <span class="@resultClass fw-bold">@resultText</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="bi bi-check-circle"></i>
                </div>
                <h3>No Completed Exams</h3>
                <p class="text-muted">You haven't completed any exams yet.</p>
            </div>
        }
    </div>
</div>
</div>