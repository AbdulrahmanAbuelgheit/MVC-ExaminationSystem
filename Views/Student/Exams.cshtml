@model List<ExaminationSystemMVC.Models.Student_Exam>
@{
    ViewData["Title"] = "Student Exams";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Exams</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .exam-header {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .card {
            margin-bottom: 15px;
            border: none;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            transition: transform 0.2s;
        }

            .card:hover {
                transform: translateY(-3px);
            }

        .status-badge {
            font-size: 0.9rem;
            padding: 5px 10px;
        }

        .score-circle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #f8f9fa;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            margin-right: 15px;
        }

        .score-value {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .score-label {
            font-size: 0.7rem;
            text-transform: uppercase;
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
        }

        .empty-icon {
            font-size: 4rem;
            color: #6c757d;
            margin-bottom: 20px;
        }

        .section-title {
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #dee2e6;
        }

        .countdown {
            font-size: 0.9rem;
            color: #dc3545;
        }

        .tab-content {
            padding-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <!-- Exams Header -->
        <div class="exam-header">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h2 class="mb-1"><i class="fas fa-file-alt me-2"></i>@ViewBag.studentName's Exams</h2>
                    <p class="text-muted">Student ID: @ViewBag.StudentId</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <a asp-action="Details" asp-route-id="@ViewBag.StudentId" class="btn btn-outline-primary">
                        <i class="fas fa-user me-1"></i> Back to Profile
                    </a>
                </div>
            </div>
        </div>

        <!-- Exams Summary Cards -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card stat-card">
                    <div class="stat-icon text-primary">
                        <i class="fas fa-calendar-alt"></i>
                    </div>
                    <h3>@ViewBag.UpcomingExamsCount</h3>
                    <p class="text-muted">Upcoming Exams</p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card stat-card">
                    <div class="stat-icon text-success">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h3>@ViewBag.CompletedExamsCount</h3>
                    <p class="text-muted">Completed Exams</p>
                </div>
            </div>
        </div>

        <!-- Exams Tabs -->
        <ul class="nav nav-tabs" id="examTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="upcoming-tab" data-bs-toggle="tab" data-bs-target="#upcoming" type="button" role="tab" aria-controls="upcoming" aria-selected="true">Upcoming Exams</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="completed-tab" data-bs-toggle="tab" data-bs-target="#completed" type="button" role="tab" aria-controls="completed" aria-selected="false">Completed Exams</button>
            </li>
        </ul>

        <div class="tab-content" id="examTabContent">
            <!-- Upcoming Exams Tab -->
            <div class="tab-pane fade show active" id="upcoming" role="tabpanel" aria-labelledby="upcoming-tab">
                @{
                    var upcomingExams = Model.Where(e => e.Exam.ExamDatetime > DateTime.Now).ToList();
                }

                @if (upcomingExams.Any())
                {
                    <div class="row">
                        @foreach (var exam in upcomingExams.OrderBy(e => e.Exam.ExamDatetime))
                        {
                            <div class="col-md-6 mb-4">
                                <div class="card h-100">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">@exam.Exam.Crs.CrsName Exam</h5>
                                        <span class="badge bg-warning status-badge">Upcoming</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <strong><i class="fas fa-calendar me-2"></i>Date:</strong>
                                            @exam.Exam.ExamDatetime.ToString("dddd, MMMM d, yyyy")
                                        </div>
                                        <div class="mb-3">
                                            <strong><i class="fas fa-clock me-2"></i>Time:</strong>
                                            @exam.Exam.ExamDatetime.ToString("h:mm tt")
                                        </div>
                                        <div class="mb-3">
                                            <strong><i class="fas fa-hourglass-half me-2"></i>Duration:</strong>
                                            @exam.Exam.ExamDuration minutes
                                        </div>
                                        <div class="mb-3">
                                            <strong><i class="fas fa-calendar-times me-2"></i>Expires:</strong>
                                            @exam.Exam.Expire_Date.ToString("dddd, MMMM d, yyyy")
                                        </div>

                                        @{
                                            var timeUntilExam = exam.Exam.ExamDatetime - DateTime.Now;
                                        }
                                        <div class="alert alert-info mt-3 mb-0">
                                            <i class="fas fa-info-circle me-2"></i>
                                            Time until exam:
                                            <span class="countdown">
                                                @(timeUntilExam.Days) days,
                                                @(timeUntilExam.Hours) hours,
                                                @(timeUntilExam.Minutes) minutes
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-calendar-alt"></i>
                        </div>
                        <h3>No Upcoming Exams</h3>
                        <p class="text-muted">You don't have any scheduled exams at the moment.</p>
                    </div>
                }
            </div>

            <!-- Completed Exams Tab -->
            <div class="tab-pane fade" id="completed" role="tabpanel" aria-labelledby="completed-tab">
                @{
                    var completedExams = Model.Where(e => e.Exam.ExamDatetime <= DateTime.Now).ToList();
                }

                @if (completedExams.Any())
                {
                    <div class="row">
                        @foreach (var exam in completedExams.OrderByDescending(e => e.Exam.ExamDatetime))
                        {
                            <div class="col-md-6 mb-4">
                                <div class="card h-100">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">@exam.Exam.Crs.CrsName Exam</h5>
                                        <span class="badge bg-success status-badge">Completed</span>
                                    </div>
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-3">
                                            <div class="score-circle">
                                                <span class="score-value">@exam.Score</span>
                                                <span class="score-label">Score</span>
                                            </div>
                                            <div>
                                                <h6 class="mb-0">@exam.Exam.Crs.CrsName</h6>
                                                <small class="text-muted">Exam ID: @exam.ExamID</small>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <strong><i class="fas fa-calendar me-2"></i>Date Taken:</strong>
                                            @exam.Exam.ExamDatetime.ToString("MMMM d, yyyy")
                                        </div>
                                        <div class="mb-3">
                                            <strong><i class="fas fa-clock me-2"></i>Time:</strong>
                                            @exam.Exam.ExamDatetime.ToString("h:mm tt")
                                        </div>
                                        <div class="mb-3">
                                            <strong><i class="fas fa-hourglass-half me-2"></i>Duration:</strong>
                                            @exam.Exam.ExamDuration minutes
                                        </div>

                                        @{
                                            string resultClass = exam.Score >= 50 ? "text-success" : "text-danger";
                                            string resultText = exam.Score >= 50 ? "Passed" : "Failed";
                                        }
                                        <div class="mt-3 text-end">
                                            <span class="@resultClass fw-bold">@resultText</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <h3>No Completed Exams</h3>
                        <p class="text-muted">You haven't completed any exams yet.</p>
                    </div>
                }
            </div>
        </div>

       
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
</body>
</html>